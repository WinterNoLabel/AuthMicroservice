services:

  db:
    image: bitnami/postgresql
    container_name: auth_database
    env_file:
      - .env
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRESQL_MAX_CONNECTIONS=10000
    volumes:
      - postgres_data:/bitnami/postgresql
    networks:
      - my_network

  api_service:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: auth_api
    restart: always
    depends_on:
      - db
    command: sh /app/utils/start_api.sh
    ports:
      - "8000:8000"
    networks:
      - my_network

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"      # Основной порт для AMQP
      - "15672:15672"    # Веб-интерфейс управления
    networks:
      - my_network
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: "/"
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbit disk_free_limit absolute 50MB -rabbit vm_memory_high_watermark 0.7"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

networks:
  my_network:
    driver: bridge

volumes:
  postgres_data:
    name: postgres_data

  rabbitmq_data:
    name: rabbitmq_data